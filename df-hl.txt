#include <bits/stdc++.h>
#include <arpa/inet.h>

using namespace std;

int createServer(int port)
{
	int sersock=socket(AF_INET,SOCK_STREAM,0);
	struct sockaddr_in addr={AF_INET, htons(port), INADDR_ANY};
	bind(sersock, (struct sockaddr *) &addr, sizeof(addr));
	cout<<"\nServer Online. Waiting for client...."<<endl;
	listen(sersock,5);
	int sock=accept(sersock,NULL,NULL);
	cout<<"Connection Established."<<endl;
	return sock;
}

long powermod(long a, long b, long q)
{
	long res=1;
	for(long i=0;i<b;i++)
	{
		res=(res*a)%q;
	}
	return res;
}

int main()
{
	int port;
	cout<<"\n Enter port: ";
	cin>>port;
	int sock=createServer(port);
	
	long q,alpha;
	cout<<"\nEnter a prime number, q: ";
	cin>>q;
	cout<<"\nEnter primitve root of q, alpha: ";
	cin>>alpha;
	
	long Yc;
	recv(sock,&Yc,sizeof(Yc),0);
	cout<<"\nClient's public key, Yc= "<<Yc<<endl;
	
	srand(time(NULL));
	long Xs=rand()%(q-2)+2;
	cout<<"\nServer's private key, Xs= "<<Xs<<endl;
	
	long Ys=powermod(alpha,Xs,q);
	send(sock,&Ys,sizeof(Ys),0);
	cout<<"\nServer's public key, Ys= "<<Ys<<endl;
	
	long k=powermod(Yc,Xs,q);
	cout<<"\nSecret Key, k="<<k<<endl;
	
	long msg;
	cout<<"\nEnter a message(number) to send: ";
	cin>>msg;
	
	long cipher=msg^k;
	send(sock,&cipher,sizeof(cipher),0);
	cout<<"Encrypted msg sent to client: "<<cipher<<endl<<endl;
}

/*client side*/

#include <bits/stdc++.h>
#include <arpa/inet.h>

using namespace std;

int connectToServer(const char* ip, int port)
{
	int sock=socket(AF_INET,SOCK_STREAM,0);
	struct sockaddr_in addr={AF_INET, htons(port),inet_addr(ip)};
	
	if(connect(sock,(struct sockaddr *)&addr,sizeof(addr))<0)
	{
		cout<<"\nRun server program first."<<endl;
		exit(0);
	}
	else
	{
		cout<<"\nCLient is connected to Server."<<endl;
	}
	return sock;
}

long powermod(long a,long b, long q)
{
	long res=1;
	for(long i=0;i<b;i++)
	{
		res=(res*a)%q;
	}
	return res;
}

int main()
{
	char ip[50];
	cout<<"\nEnter server's IP address: ";
	cin>>ip;
	int port;
	cout<<"Enter port: ";
	cin>>port;
	int sock=connectToServer(ip,port);
	
	long q,alpha;
	cout<<"\nEnter a prime number, q: ";
	cin>>q;
	cout<<"Enter primitive root of q, alpha: ";
	cin>>alpha;
	
	srand(time(NULL));
	long Xc=rand()%(q-2)+2;
	cout<<"\nClient's private key, Xc= "<<Xc<<endl;
	
	long Yc=powermod(alpha,Xc,q);
	send(sock,&Yc,sizeof(Yc),0);
	cout<<"Client's public key, Yc= "<<Yc<<endl;
	
	long Ys;
	recv(sock,&Ys,sizeof(Ys),0);
	cout<<"\nServer's public key, Ys= "<<Ys<<endl;
	
	long k=powermod(Ys,Xc,q);
	cout<<"\nSecret Key, k="<<k<<endl;
	
	long cipher;
	recv(sock,&cipher,sizeof(cipher),0);
	cout<<"\nMessage received from Server: "<<cipher<<endl;
	
	long decipher=cipher^k;
	cout<<"Decrypted Message: "<<decipher<<endl<<endl;
}